Week 5-
Mon: Starting with SQL queries was the best for me. I am most interested in data and statistics so I know that will be a useful tool in the future.

Tues: By using the int(), str() and type() functions it returns objects, lending to OOP.

Wed: It makes code more readable and easier to "re-write" functions without actually rewriting the code.

Thurs: By making different apps, it helps keep different aspects of the site or program separated. You can direct URLs to go to different apps, like user info, order confirmation, etc.

Fri: With Flask, we put everything in to one file and it handles the request/response cycle in that one (aside from templates). With Django it goes in to multiple files and directs as needed.

Week 6-
Mon: We can input the post & get requests, and the outputs can be http responses, render, or redirect

Tues: Good: username, email address, shopping history, or any non-sensitive data
Bad: password, social security #, credit card #, or any sensitive data

Wed: Django uses OOP for ORM. We use classes & models

Thurs: ORM is convenient and more readable but has limitations and can't create complex SQL queries.

Fri: Items & buyers: an item may be purchased by many people, and a person can buy multiple items.

Not sure when a ManyToManyField would be insufficient..

Week 7-
Mon: .get() is used to return a single object and .filter() is used to return a list of objects

Tues: Named routes condense the url in to a nickname for easier use later on

Wed: Use the .add() and .delete() commands, as in:

this_pub = Publisher.objects.get(id=3)
this_pub.add(Book.objects.get(id=1))
And same process for deleting.. This works both ways so it is removed as a relationship for the publisher and the book.

Thurs: When a module is imported that has been previously imported. Similar to a circular reference, this is avoided by changing what modules are referenced when or combining to one

Fri: I would like to create a site for gamers and game creators to connect. It would have various filters for searching by both sides, allow gamers to post what they are looking for, have creators promote/suggest their games to gamers, etc. I think it would be a great way to find unique games and for small/independent game creators to get their work out there.


Week 8- 
Mon: I haven't yet reached out to Susan, but am definitely excited to have her assistance. A friend of  a friend works here in NYC at a very popular gaming company and I will be working with him to prepare for a possible position there. If that doesn't work out I will do the traditional job search.

Tues: With logging in, you need to verify credentials (username/password validation), and ensure they are routed to their user-specific page. When logging out, all session keys should be deleted so it is as if they didn't log in in the first place.

Wed: Multiple apps should be used when the site is complex and should be divided in to different pieces, handled by the different apps. For example, Discover handles at least credit cards & student loans. If they combined those sites, they could use different apps for those two "sides" of their site.